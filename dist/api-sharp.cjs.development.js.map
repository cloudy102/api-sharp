{"version":3,"file":"api-sharp.cjs.development.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/utils.ts","../src/cache/ExpireCache.ts","../src/http_client/WebXhrClient.ts","../src/http_client/WebAxiosClient.ts","../src/ApiSharp.ts"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && !check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { HttpHeader } from \"./types\"\r\n\r\nexport function isString(v: any): v is string {\r\n  return typeof v === \"string\"\r\n}\r\n\r\nexport function isFunction(v: any): v is Function {\r\n  return typeof v === \"function\"\r\n}\r\n\r\nexport function isUndefined(v: any): v is undefined {\r\n  return v === undefined\r\n}\r\n\r\nexport function isNumber(v: any): v is number {\r\n  return typeof v === \"number\"\r\n}\r\n\r\nexport function isObject(v: any): v is Object {\r\n  return v !== null && typeof v === \"object\"\r\n}\r\n\r\nexport function isPlainObject(v: any): v is Object {\r\n  return v !== null && typeof v === \"object\" && v.__proto__ === Object.prototype\r\n}\r\n\r\nexport function identity<T>(v: T): T {\r\n  return v\r\n}\r\n\r\nexport function getDefault(...args) {\r\n  for (let v of args) {\r\n    if (!isUndefined(v)) return v\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport function encodeQuery(query: Object): string {\r\n  return Object.keys(query).reduce((q, k) => {\r\n    return (q ? q + \"&\" : q) + (encodeURIComponent(k) + \"=\" + encodeURIComponent(query[k]))\r\n  }, \"\")\r\n}\r\n\r\nexport function formatFullUrl(baseURL, url, query) {\r\n  const queryString = encodeQuery(query)\r\n  return baseURL + url + (queryString ? \"?\" : \"\") + queryString\r\n}\r\n\r\nexport function formatResponseHeaders(headers: string): HttpHeader {\r\n  var arr = headers.trim().split(/[\\r\\n]+/)\r\n  var headerMap = {}\r\n\r\n  arr.forEach(function(line) {\r\n    let parts = line.split(\": \")\r\n    let header = parts.shift()\r\n    let value = parts.join(\": \")\r\n    headerMap[header!] = value\r\n  })\r\n  return headerMap\r\n}\r\n\r\n/**\r\n * 对对象进行深度排序\r\n *\r\n * 如果是数组，转换为字符串后，按字母序排序\r\n * 如果是对象，按 key 进行字母排序\r\n *\r\n * @param {any} value\r\n */\r\nexport function getSortedString(value: any): string {\r\n  let str = \"\"\r\n  if (Array.isArray(value)) {\r\n    str = \"[\" + [...value].sort().map(getSortedString) + \"]\"\r\n  } else if (typeof value === \"object\") {\r\n    str = Object.keys(value)\r\n      .sort()\r\n      .reduce((str, key, index, arr) => {\r\n        str += `${key}:${value[key]}`\r\n        if (index !== arr.length - 1) {\r\n          str += \",\"\r\n        } else {\r\n          str += \"}\"\r\n        }\r\n        return str\r\n      }, \"{\")\r\n  } else {\r\n    str = String(value)\r\n  }\r\n  return str\r\n}","import ICache from \"./ICache\"\r\n\r\nclass ExpireCacheItem<V> {\r\n  public data: V\r\n  public timeout: number\r\n  public cacheTime: number\r\n\r\n  constructor(data: V, timeout: number) {\r\n    this.data = data\r\n    this.timeout = timeout\r\n    // 创建对象时候的时间，大约设定为数据获得的时间\r\n    this.cacheTime = Date.now()\r\n  }\r\n}\r\n\r\nexport default class ExpireCache<V> implements ICache<V> {\r\n  private readonly cacheMap = new Map<string, ExpireCacheItem<V>>()\r\n  private readonly defaultCacheTime\r\n\r\n  constructor(defaultCacheTime = 5 * 60 * 1000) {\r\n    this.defaultCacheTime = defaultCacheTime\r\n  }\r\n\r\n  // 数据是否超时\r\n  isOverTime(key: string) {\r\n    const data = this.cacheMap.get(key)\r\n\r\n    if (!data) return true\r\n\r\n    const overTime = Date.now() - data.cacheTime\r\n    if (overTime > 0 && overTime > data.timeout) {\r\n      this.cacheMap.delete(key)\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  has(key) {\r\n    return !this.isOverTime(key)\r\n  }\r\n\r\n  delete(key: string) {\r\n    return this.cacheMap.delete(key)\r\n  }\r\n\r\n  get(key) {\r\n    if (this.isOverTime(key)) {\r\n      return undefined\r\n    }\r\n    const value = this.cacheMap.get(key)\r\n    if (!value) {\r\n      return undefined\r\n    }\r\n    return value.data\r\n  }\r\n\r\n  set(key, data, { timeout = this.defaultCacheTime } = {}) {\r\n    const itemCache = new ExpireCacheItem(data, timeout)\r\n    this.cacheMap.set(key, itemCache)\r\n    return data\r\n  }\r\n\r\n  clear() {\r\n    return this.cacheMap.clear()\r\n  }\r\n}\r\n","import { formatFullUrl, formatResponseHeaders, isPlainObject } from \"../utils\"\nimport { IHttpClient, IRequest, IResponse } from \"./IHttpClient\"\n\nexport default class WebXhrClient implements IHttpClient {\n  async request<T>(options: IRequest): Promise<IResponse<T>> {\n    return new Promise(resolve => {\n      const xhr = new XMLHttpRequest()\n      const fullUrl = formatFullUrl(options.baseURL, options.url, options.query)\n      xhr.open(options.method, fullUrl, true)\n      // 设置请求头\n      Object.keys(options.headers).forEach(key => xhr.setRequestHeader(key, options.headers[key]))\n\n      // 设置请求数据\n      let body: Document | BodyInit | null = null\n      if (options.method === \"POST\") {\n        if (isPlainObject(options.body)) {\n          body = JSON.stringify(options.body)\n          xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n        } else {\n          body = options.body\n        }\n      }\n      // 设置响应数据类型（只支持 JSON）\n      xhr.responseType = \"text\"\n      xhr.send(body)\n      xhr.onreadystatechange = function() {\n        if (this.readyState === XMLHttpRequest.DONE) {\n          const headers = formatResponseHeaders(this.getAllResponseHeaders())\n          const response = {\n            data: this.response,\n            status: this.status,\n            statusText: this.statusText,\n            headers\n          }\n          if (!this.response && this.responseText) {\n            response.data = this.responseText\n          }\n          // // try parse json\n          try {\n            response.data = JSON.parse(response.data)\n          } catch (err) {\n            // do nothing\n          }\n          resolve(response)\n        }\n      }\n    })\n  }\n}\n","import { IHttpClient, IRequest, IResponse } from \"./IHttpClient\"\nimport axios from \"axios\"\n\nexport default class WebAxiosClient implements IHttpClient {\n  async request<T>(options: IRequest): Promise<IResponse<T>> {\n    const res = await axios.request({\n      baseURL: options.baseURL,\n      url: options.url,\n      method: options.method,\n      params: options.method === \"GET\" ? options.query : null,\n      data: options.method === \"POST\" ? options.body : null,\n      headers: options.headers\n    })\n\n    return {\n      data: res.data,\n      status: res.status,\n      statusText: res.statusText,\n      headers: res.headers\n    }\n  }\n}\n","import {\r\n  ApiDescriptor,\r\n  HttpMethod,\r\n  ProcessedApiDescriptor,\r\n  ApiResponse,\r\n  HttpHeader,\r\n  Transformer,\r\n  LogFormatter,\r\n  Params\r\n} from \"./types\"\r\nimport invariant from \"tiny-invariant\"\r\nimport warning from \"tiny-warning\"\r\nimport PropTypes from \"prop-types\"\r\nimport { isString, isFunction, getSortedString, isUndefined, isNumber, isObject, identity, getDefault } from \"./utils\"\r\nimport { ICache, ExpireCache } from \"./cache\"\r\nimport { IHttpClient, IResponse, WebXhrClient } from \"./http_client\"\r\n\r\n// 全局配置\r\nexport interface ApiSharpOptions {\r\n  httpClient?: IHttpClient\r\n  baseURL?: string\r\n  method?: HttpMethod\r\n  headers?: HttpHeader\r\n  paramsTransformer?: Transformer<Params>\r\n  returnsTransformer?: Transformer<any>\r\n  enableCache?: boolean\r\n  cacheTime?: number\r\n  enableRetry?: boolean\r\n  retryTimes?: number\r\n  timeout?: number\r\n  enableLog?: boolean\r\n  logFormatter?: LogFormatter\r\n}\r\n\r\nexport class ApiSharpRequestError extends Error {\r\n  constructor(message?: string, public api?: ProcessedApiDescriptor) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport const defaultConfig = {\r\n  httpClient: new WebXhrClient(),\r\n  cache: new ExpireCache<Promise<IResponse<any>>>(),\r\n  url: \"\",\r\n  baseURL: \"\",\r\n  headers: {},\r\n  enableMock: false,\r\n  mockData: undefined,\r\n  method: \"GET\",\r\n  params: {},\r\n  description: \"\",\r\n  enableCache: false,\r\n  cacheTime: 5 * 1000,\r\n  paramsTransformer: identity,\r\n  returnsTransformer: identity,\r\n  enableRetry: false,\r\n  retryTimes: 1,\r\n  timeout: 60 * 1000,\r\n  enableLog: process.env.NODE_ENV !== \"production\",\r\n  logFormatter: {\r\n    logRequest: (api: ProcessedApiDescriptor) => {\r\n      console.log(\r\n        `%cRequest %c %c${api.method}|${api.description}|${api.url}%c|%O`,\r\n        \"color: white; background-color: rgba(0, 116, 217, 0.69); padding: 2px 5px; border-radius: 2px\",\r\n        \"\",\r\n        \"color: #0074D9\",\r\n        \"\",\r\n        api.params\r\n      )\r\n    },\r\n    logResponse: (api: ProcessedApiDescriptor, data: any) => {\r\n      console.log(\r\n        `%cResponse%c %c${api.method}|${api.description}|${api.url}%c|%O|%O`,\r\n        \"color: white; background-color: rgba(61, 153, 112, 0.69); padding: 2px 5px; border-radius: 2px\",\r\n        \"\",\r\n        \"color: #3D9970\",\r\n        \"\",\r\n        api.params,\r\n        data\r\n      )\r\n    },\r\n    logResponseError: (_error: Error, api: ProcessedApiDescriptor, data: any) => {\r\n      console.log(\r\n        `%cResponse%c %c${api.method}|${api.description}|${api.url}%c|%O|%O`,\r\n        \"color: white; background-color: rgba(255, 65, 54, 0.69); padding: 2px 5px; border-radius: 2px\",\r\n        \"\",\r\n        \"color: #FF4136\",\r\n        \"\",\r\n        api.params,\r\n        data\r\n      )\r\n    },\r\n    logResponseCache: (api: ProcessedApiDescriptor, data: any) => {\r\n      console.log(\r\n        `%cResponse Cache %c %c${api.method}|${api.description}|${api.url}%c|%O|%O`,\r\n        \"color: white; background-color: rgba(177, 13, 201, 0.69); padding: 2px 5px; border-radius: 2px\",\r\n        \"\",\r\n        \"color: #B10DC9\",\r\n        \"\",\r\n        api.params,\r\n        data\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport class ApiSharp {\r\n  private readonly httpClient: IHttpClient\r\n  private readonly cache: ICache<Promise<IResponse<any>>>\r\n  private readonly baseURL: string\r\n  private readonly method: HttpMethod\r\n  private readonly headers: HttpHeader\r\n  private readonly paramsTransformer: Transformer<Params>\r\n  private readonly returnsTransformer: Transformer<any>\r\n  private readonly enableCache: boolean\r\n  private readonly cacheTime: number\r\n  private readonly enableRetry: boolean\r\n  private readonly retryTimes: number\r\n  private readonly timeout: number\r\n  private readonly enableLog: boolean\r\n  private readonly logFormatter: LogFormatter\r\n\r\n  constructor(options: ApiSharpOptions = {}) {\r\n    this.httpClient = getDefault(options.httpClient, defaultConfig.httpClient)\r\n    this.cache = defaultConfig.cache\r\n    this.baseURL = getDefault(options.baseURL, defaultConfig.baseURL)\r\n    this.method = getDefault(options.method, defaultConfig.method)\r\n    this.headers = getDefault(options.headers, defaultConfig.headers)\r\n    this.paramsTransformer = getDefault(options.paramsTransformer, defaultConfig.paramsTransformer)\r\n    this.returnsTransformer = getDefault(options.returnsTransformer, defaultConfig.returnsTransformer)\r\n    this.enableCache = getDefault(options.enableCache, defaultConfig.enableCache)\r\n    this.cacheTime = getDefault(options.cacheTime, defaultConfig.cacheTime)\r\n    this.enableRetry = getDefault(options.enableRetry, defaultConfig.enableRetry)\r\n    this.retryTimes = getDefault(options.retryTimes, defaultConfig.retryTimes)\r\n    this.timeout = getDefault(options.timeout, defaultConfig.timeout)\r\n    this.enableLog = getDefault(options.enableLog, defaultConfig.enableLog)\r\n    this.logFormatter = getDefault(options.logFormatter, defaultConfig.logFormatter)\r\n  }\r\n\r\n  /**\r\n   * 发送请求\r\n   */\r\n  async request<T>(_api: ApiDescriptor | string): Promise<ApiResponse<T>> {\r\n    const api = this.processApi(_api)\r\n\r\n    this.logRequest(api)\r\n\r\n    // 处理 mock 数据\r\n    if (api.enableMock) {\r\n      return { data: api.mockData, from: \"mock\", api, headers: {}, status: 200, statusText: \"OK(mock)\" }\r\n    }\r\n\r\n    let requestPromise: Promise<IResponse<T>>\r\n    let cachedKey\r\n    let hitCache = false\r\n\r\n    // 构造一个超时时自动 reject 的 Promise\r\n    const timeoutPromise: Promise<ApiSharpRequestError> = new Promise((_resolve, reject) => {\r\n      const error = new Error(`请求超时(${api.timeout}ms)`)\r\n      setTimeout(() => reject(error), api.timeout)\r\n    })\r\n\r\n    // 处理缓存\r\n    if (api.enableCache) {\r\n      cachedKey = this.generateCachedKey(api)\r\n      if (this.cache.has(cachedKey)) {\r\n        requestPromise = this.cache.get(cachedKey)!\r\n        hitCache = true\r\n      } else {\r\n        requestPromise = this.sendRequest<T>(api)\r\n        hitCache = false\r\n        this.cache.set(cachedKey, requestPromise, { timeout: api.cacheTime })\r\n      }\r\n    } else {\r\n      requestPromise = this.sendRequest<T>(api)\r\n    }\r\n\r\n    let res: IResponse<T>\r\n\r\n    try {\r\n      // 发起请求\r\n      res = (await Promise.race([requestPromise, timeoutPromise])) as IResponse<T>\r\n    } catch (err) {\r\n      // 请求失败或超时，都会抛出异常并被捕获处理\r\n\r\n      // 请求失败时删除缓存\r\n      if (api.enableCache) {\r\n        this.cache.delete(cachedKey)\r\n      }\r\n      if (api.enableRetry && api.retryTimes >= 1) {\r\n        return this.request({ ...api, retryTimes: api.retryTimes - 1, __retry: true })\r\n      } else {\r\n        this.logResponseError(err, api)\r\n        throw new ApiSharpRequestError(err.message, api)\r\n      }\r\n    }\r\n\r\n    // 检查请求结果，并对失败情况做处理\r\n    const checkResult = this.checkResponseData(res.data)\r\n    if (!checkResult.success) {\r\n      if (api.enableCache) {\r\n        this.cache.delete(cachedKey)\r\n      }\r\n      if (api.enableRetry && api.retryTimes >= 1) {\r\n        return this.request({ ...api, retryTimes: api.retryTimes - 1, __retry: true })\r\n      } else {\r\n        this.logResponseError(new Error(checkResult.errMsg), api, res.data)\r\n        throw new ApiSharpRequestError(checkResult.errMsg, api)\r\n      }\r\n    }\r\n\r\n    if (hitCache) {\r\n      this.logResponseCache(api, res.data)\r\n    } else {\r\n      this.logResponse(api, res.data)\r\n    }\r\n\r\n    return {\r\n      data: api.returnsTransformer(res.data),\r\n      from: hitCache ? \"cache\" : \"network\",\r\n      api,\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: res.headers\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清除全部缓存\r\n   */\r\n  public clearCache() {\r\n    return this.cache.clear()\r\n  }\r\n\r\n  private sendRequest<T>(api: ProcessedApiDescriptor): Promise<IResponse<T>> {\r\n    return this.httpClient.request<T>({\r\n      baseURL: api.baseURL,\r\n      url: api.url,\r\n      method: api.method,\r\n      headers: api.headers,\r\n      query: api.method === \"GET\" ? api.params : {},\r\n      body: api.method === \"POST\" ? api.params : {}\r\n    })\r\n  }\r\n\r\n  private generateCachedKey(api: ApiDescriptor) {\r\n    return `${api.method} ${api.baseURL}${api.url}?${getSortedString(api.params)}`\r\n  }\r\n\r\n  private processApi(api: ApiDescriptor | string): ProcessedApiDescriptor {\r\n    invariant(api, \"api 为空\")\r\n\r\n    if (isString(api)) {\r\n      api = { url: api }\r\n    }\r\n\r\n    const _api = { ...api } as ProcessedApiDescriptor\r\n\r\n    // 请求地址\r\n    if (!api.url || !String(api.url)) {\r\n      invariant(false, `url 为空`)\r\n    } else {\r\n      _api.url = String(api.url)\r\n    }\r\n\r\n    // 基地址\r\n    if (isUndefined(api.baseURL)) {\r\n      _api.baseURL = this.baseURL\r\n    } else {\r\n      _api.baseURL = api.baseURL\r\n    }\r\n    _api.baseURL = _api.baseURL.replace(/\\/+$/, \"\")\r\n\r\n    // 请求方法\r\n    if (isUndefined(api.method)) {\r\n      _api.method = this.method\r\n    } else if (isString(api.method) && /get|post/i.test(api.method)) {\r\n      _api.method = api.method.toUpperCase() as HttpMethod\r\n    } else {\r\n      invariant(false, `method 期望值为 get|post 其一，实际值为\"${api.method}\"`)\r\n    }\r\n\r\n    if (isUndefined(api.headers)) {\r\n      _api.headers = this.headers\r\n    } else {\r\n      _api.headers = api.headers\r\n    }\r\n\r\n    // 描述\r\n    if (isUndefined(api.description)) {\r\n      _api.description = defaultConfig.description\r\n    } else if (isFunction(api.description)) {\r\n      _api.description = String(api.description.call(null, api))\r\n    } else {\r\n      _api.description = String(api.description)\r\n    }\r\n\r\n    // 开启缓存\r\n    if (isUndefined(api.enableCache)) {\r\n      _api.enableCache = this.enableCache\r\n    } else if (isFunction(api.enableCache)) {\r\n      _api.enableCache = !!api.enableCache.call(null, api)\r\n    } else {\r\n      _api.enableCache = !!api.enableCache\r\n    }\r\n    if (_api.method.toUpperCase() !== \"GET\" && _api.enableCache) {\r\n      _api.enableCache = false\r\n      warning(false, `只有 GET 请求支持开启缓存，当前请求方法为\"${_api.method}\"，缓存开启不会生效`)\r\n    }\r\n\r\n    // 缓存时间\r\n    if (isUndefined(api.cacheTime)) {\r\n      _api.cacheTime = this.cacheTime\r\n    } else if (isNumber(api.cacheTime)) {\r\n      _api.cacheTime = api.cacheTime\r\n    } else if (isFunction(api.cacheTime)) {\r\n      _api.cacheTime = api.cacheTime.call(null, api)\r\n    } else {\r\n      _api.cacheTime = this.cacheTime\r\n      warning(false, `cacheTime 期望 number/function 类型，实际类型为${typeof api.cacheTime}，自动使用默认值`)\r\n    }\r\n\r\n    if (isUndefined(api.enableMock)) {\r\n      _api.enableMock = defaultConfig.enableMock\r\n    } else if (isFunction(api.enableMock)) {\r\n      _api.enableMock = !!api.enableMock.call(null, api)\r\n    } else {\r\n      _api.enableMock = !!api.enableMock\r\n    }\r\n\r\n    if (isUndefined(api.mockData)) {\r\n      _api.mockData = defaultConfig.mockData\r\n    } else if (isFunction(api.mockData)) {\r\n      _api.mockData = api.mockData.call(null, api)\r\n    } else {\r\n      _api.mockData = api.mockData\r\n    }\r\n\r\n    if (isUndefined(api.enableRetry)) {\r\n      _api.enableRetry = this.enableRetry\r\n    } else if (isFunction(api.enableRetry)) {\r\n      _api.enableRetry = !!api.enableRetry.call(null, api)\r\n    } else {\r\n      _api.enableRetry = !!api.enableRetry\r\n    }\r\n\r\n    if (isUndefined(api.retryTimes)) {\r\n      _api.retryTimes = this.retryTimes\r\n    } else if (isNumber(api.retryTimes)) {\r\n      _api.retryTimes = api.retryTimes\r\n    } else if (isFunction(api.retryTimes)) {\r\n      _api.retryTimes = api.retryTimes.call(null, api)\r\n    } else {\r\n      _api.retryTimes = this.retryTimes\r\n      warning(false, `retryTimes 期望 number/function 类型，实际类型为${typeof api.retryTimes}，自动使用默认值`)\r\n    }\r\n\r\n    if (isUndefined(api.timeout)) {\r\n      _api.timeout = this.timeout\r\n    } else {\r\n      _api.timeout = api.timeout\r\n    }\r\n\r\n    if (isUndefined(api.enableLog)) {\r\n      _api.enableLog = this.enableLog\r\n    } else if (isFunction(api.enableLog)) {\r\n      _api.enableLog = !!api.enableLog.call(null, api)\r\n    } else {\r\n      _api.enableLog = !!api.enableLog\r\n    }\r\n\r\n    if (isUndefined(api.logFormatter)) {\r\n      _api.logFormatter = this.logFormatter\r\n    } else if (isObject(api.logFormatter)) {\r\n      _api.logFormatter = {\r\n        logRequest: api.logFormatter.logRequest || this.logFormatter.logRequest,\r\n        logResponse: api.logFormatter.logResponse || this.logFormatter.logResponse,\r\n        logResponseError: api.logFormatter.logResponseError || this.logFormatter.logResponseError,\r\n        logResponseCache: api.logFormatter.logResponseCache || this.logFormatter.logResponseCache\r\n      }\r\n    } else {\r\n      _api.logFormatter = this.logFormatter\r\n    }\r\n\r\n    /**\r\n     * 参数转换 + 类型校验\r\n     */\r\n    let _params = isUndefined(api.params) ? defaultConfig.params : api.params\r\n    let _paramsTransformer\r\n    if (isUndefined(api.paramsTransformer)) {\r\n      _paramsTransformer = this.paramsTransformer\r\n    } else if (isFunction(api.paramsTransformer)) {\r\n      _paramsTransformer = api.paramsTransformer\r\n    } else {\r\n      _paramsTransformer = this.paramsTransformer\r\n      warning(false, `paramsTransformer 期望一个函数，实际接收到${typeof api.paramsTransformer}`)\r\n    }\r\n    _params = _paramsTransformer.call(null, _params)\r\n    if (!isUndefined(api.paramsType)) {\r\n      const componentName = _api.baseURL + _api.url\r\n      PropTypes.checkPropTypes(api.paramsType, _params, \"\", componentName)\r\n    }\r\n    _api.params = _params\r\n\r\n    if (isUndefined(api.returnsTransformer)) {\r\n      _api.returnsTransformer = this.returnsTransformer\r\n    }\r\n\r\n    return _api\r\n  }\r\n\r\n  protected checkResponseData(data: any): { success: boolean; errMsg?: string } {\r\n    // return {\r\n    //   success: false,\r\n    //   errMsg: ''\r\n    // }\r\n    return {\r\n      success: !!data\r\n    }\r\n  }\r\n\r\n  private logRequest(api: ProcessedApiDescriptor) {\r\n    api.enableLog && api.logFormatter.logRequest(api)\r\n  }\r\n\r\n  private logResponse(api: ProcessedApiDescriptor, data) {\r\n    api.enableLog && api.logFormatter.logResponse(api, data)\r\n  }\r\n\r\n  private logResponseError(error: Error, api: ProcessedApiDescriptor, data?: any) {\r\n    api.enableLog && api.logFormatter.logResponseError(error, api, data)\r\n  }\r\n\r\n  private logResponseCache(api: ProcessedApiDescriptor, data) {\r\n    api.enableLog && api.logFormatter.logResponseCache(api, data)\r\n  }\r\n}\r\n"],"names":["isString","v","isFunction","isUndefined","undefined","isNumber","isObject","isPlainObject","__proto__","Object","prototype","identity","getDefault","args","encodeQuery","query","keys","reduce","q","k","encodeURIComponent","formatFullUrl","baseURL","url","queryString","formatResponseHeaders","headers","arr","trim","split","headerMap","forEach","line","parts","header","shift","value","join","getSortedString","str","Array","isArray","sort","map","key","index","length","String","ExpireCacheItem","data","timeout","cacheTime","Date","now","ExpireCache","defaultCacheTime","Map","isOverTime","cacheMap","get","overTime","has","set","itemCache","clear","WebXhrClient","request","options","Promise","resolve","xhr","XMLHttpRequest","fullUrl","open","method","setRequestHeader","body","JSON","stringify","responseType","send","onreadystatechange","readyState","DONE","getAllResponseHeaders","response","status","statusText","responseText","parse","err","WebAxiosClient","axios","params","res","ApiSharpRequestError","message","api","Error","defaultConfig","httpClient","cache","enableMock","mockData","description","enableCache","paramsTransformer","returnsTransformer","enableRetry","retryTimes","enableLog","process","logFormatter","logRequest","console","log","logResponse","logResponseError","_error","logResponseCache","ApiSharp","_api","checkResult","checkResponseData","success","cachedKey","__retry","errMsg","hitCache","from","processApi","requestPromise","timeoutPromise","_resolve","reject","error","setTimeout","generateCachedKey","sendRequest","race","clearCache","invariant","replace","test","toUpperCase","call","warning","_params","_paramsTransformer","paramsType","componentName","PropTypes","checkPropTypes"],"mappings":"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"}